#!/usr/bin/env bash
#
# Mute or unmute all connected microphones.
#
# I've been using a shortcut to mute the default microphone for a while.
# I found it useful during meetings as my headset doesn't provide a dedicated mute button.
# Lately, I realized that I want all the connected microphones to be muted when I use the
# shortcut, as I never know if any of the multitude of meeting platforms I use might be
# misconfigured and gets audio from the non-default microphone.
# I usually have three mics always connected: the webcam one, the laptop one, and the headset one.
# By binding this script to my mute-key I'm sure that no one microphone is listening.

# 0 = unmute, 1 = mute
set_to=1

helper() {
    echo "Usage: $(basename "${BASH_SOURCE[0]}") <mute|unmute|toggle>"
}

toggle() {
    # Get the status of the default microphone and toggle it, all the other microphones will be set accordingly.
    local is_muted=$(pactl get-source-mute @DEFAULT_SOURCE@)

    # If the defaul mic is muted, then prepare to unmute them all
    if [[ "$is_muted" =~ "yes" ]]; then set_to=0; fi

    # Return what to do
    echo $set_to
}

unmute() {
    echo "0"
}

mute() {
    echo "1"
}

main() {

    # Check if there is exactly one argument or exit
    [[ "$#" -eq 1 ]] || { helper; exit 0; }

    case "${1:-}" in
        toggle) set_to=$(toggle) ;;
        unmute) set_to=$(unmute) ;;
        mute) set_to=$(mute) ;;
        *) helper; exit 1 ;;
    esac

    # Get a list of attached microphones IDs
    for mic_id in `pactl list sources short | cut -d $'\t' -f1`; do
        # Mute or umute
        pactl set-source-mute $mic_id $set_to
    done

}

main "$@"
