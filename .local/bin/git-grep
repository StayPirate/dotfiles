#!/usr/bin/env bash

gitgrep_usage () {
    cat <<EOF
Usage:
    gitgrep "<string to search for>" ["pathmame"] ["grep extra options"]

Examples:
    gitgrep "if (unlikely(skb->len < ieee80211_get_radiotap_len(skb->data)))"
    gitgrep "if (unlikely(skb->len < ieee80211_get_radiotap_len(skb->data)))" "-W"
    gitgrep "if (unlikely(skb->len < ieee80211_get_radiotap_len(skb->data)))" "net/mac80211/tx.c"
    gitgrep "if (unlikely(skb->len < ieee80211_get_radiotap_len(skb->data)))" "net/mac80211/tx.c" "-A 5"

Note:
    gitgrep hardcodes some -always useful- git-grep options: --heading --break --threads 4 -pInF -C 3
    when you pass your own option with 'gitgrep "<string>" "<option>"', only the default '-C 3' will be overwritten.
    For more information about git-grep: https://git-scm.com/docs/git-grep
EOF
exit
}

# ##### MAIN #####
# ================

# Need to be ran inside a git repo
if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
    echo "$(pwd) is not a git repository."
    exit
fi

# If no args are passed
[[ $# -eq 0 ]] && gitgrep_usage


pathname=""
grep_args=""
# The following nested if statements make parameters position indipendet
if [[ ! -z "$2" ]]; then
    if [[ "$2" =~ ^\- ]]; then
        # The second arg is an option for grep
        grep_args="$2"
        if [[ ! "$3" =~ ^\- ]]; then
            # The third args is a pathname
            pathname="$3"
        fi
    else
        # The second args is a pathname
        pathname="$2"
        if [[ "$3" =~ ^\- ]]; then
            # The third args is an option for grep
            grep_args="$3"
        fi
    fi
fi

# Only search in local branches
declare -a local_branches=($(git branch | sed 's/^..//g' | tr '\n' ' '))

# Escape all the single quote chars '
escaped_string=$(echo $1 | sed "s/'/'\"'\"'/g")

for branch in "${local_branches[@]}"; do
    echo -e "\033[1;33m$branch \033[0m"

    # If a pathname is provided, nail down the search only to that file
    [[ ! -z "$pathname" ]] && branch="$branch:$pathname"

    eval git grep --heading --break --threads 4 -pInF ${grep_args:-"-C 3"} \'${escaped_string}\' $branch
done
